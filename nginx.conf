# FastGo Nginx 配置文件
# 作用：为 FastGo 应用提供反向代理、静态文件服务和安全防护

worker_processes 4;                                 # 启动4个工作进程，通常设置为CPU核心数

error_log  /var/log/nginx/error.log warn;           # 错误日志路径和级别
pid        /var/run/nginx.pid;                      # Nginx 的 PID 文件存储位置

events {
    worker_connections 4096;                        # 每个 worker 进程允许的最大连接数
    multi_accept on;                                # 允许一个 worker 同时接受多个新连接
    use epoll;                                      # 使用 epoll 事件模型（Linux 推荐）
}

http {
    include       /etc/nginx/mime.types;            # 包含 MIME 类型配置文件
    default_type  application/octet-stream;         # 未知文件类型的默认 MIME 类型

    # 性能优化配置
    sendfile        on;                             # 开启高效文件传输模式
    tcp_nopush      on;                             # 在 sendfile 开启时优化网络包发送
    tcp_nodelay     on;                             # 禁用 Nagle 算法，降低延迟
    keepalive_timeout  65;                          # HTTP 长连接保持时间（秒）

    # 客户端请求配置
    client_max_body_size 1G;                        # 客户端请求体最大大小（文件上传限制）
    client_body_buffer_size 128k;                   # 客户端请求体缓冲区大小
    client_header_buffer_size 32k;                  # 客户端请求头缓冲区大小

    # 日志格式定义
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';  # 标准访问日志格式

    access_log  /var/log/nginx/access.log  main;    # 访问日志文件路径和格式

    # 安全配置
    server_tokens off;                               # 隐藏 Nginx 版本号，提高安全性

    # 连接和请求限制配置
    limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;     # 定义连接限制区域（10MB内存）
    limit_req_zone $binary_remote_addr zone=req_limit_per_ip:10m rate=20r/s;     # 定义请求频率限制（每秒20次）

    # 全局目录浏览默认配置
    autoindex_exact_size off;                       # 文件大小显示为人类可读格式（KB、MB等）
    autoindex_localtime on;                         # 文件修改时间使用服务器本地时间

    # 带宽限制配置
    limit_rate_after 500000m;                        # 传输超过500000MB后开始限速
    limit_rate 30m;                                 # 限制每个连接的传输速度为30MB/s

    # FastAPI 后端服务器组
    upstream fastapi_backend {
        server 127.0.0.1:8080;                      # FastAPI 应用服务器地址和端口
        keepalive 32;                               # 保持与后端的长连接数量
    }

    # 默认服务器配置（拒绝未知域名请求）
    # server {
    #     listen 80 default_server;                   # 监听80端口，作为默认服务器
    #     server_name _;                              # 匹配所有未明确配置的域名
    #     return 444;                                 # 直接关闭连接，不返回任何内容（安全措施）
    # }

    # 主服务器配置
    server {
        listen 80;                                  # 监听 HTTP 80 端口
        server_name localhost;                      # 服务器域名（可修改为实际域名）
        access_log /var/log/nginx/fastgo_access.log main;  # 专用访问日志文件

        charset utf-8;                              # 设置字符编码为 UTF-8

        root /var/www/html;                         # 网站根目录（静态文件存放位置）
        index index.html index.htm;                 # 默认首页文件名优先级

        # 根路径处理（静态文件服务）
        location / {
            try_files $uri /index.html;      # 尝试查找文件，找不到则尝试目录索引
            
            limit_conn conn_limit_per_ip 5;         # 限制每个IP最多5个并发连接
            limit_req zone=req_limit_per_ip burst=10 nodelay;  # 请求频率限制，允许突发10个请求

            # 安全头设置
            add_header X-Frame-Options DENY;        # 防止页面被嵌入iframe
            add_header X-Content-Type-Options nosniff;  # 防止MIME类型嗅探攻击
        }

        # 目录索引处理（普通网站允许查看目录）
        location @autoindex {
            autoindex on;                           # 开启目录浏览功能
            autoindex_format html;                  # 使用HTML格式显示目录
        }

        # 静态资源路径处理（禁止目录浏览）
        location /static/ {
            try_files $uri =404;                    # 尝试查找静态文件，找不到返回404
            autoindex off;                          # 禁止目录浏览，提高安全性
            
            limit_conn conn_limit_per_ip 5;         # 限制每个IP最多5个并发连接
            limit_req zone=req_limit_per_ip burst=10 nodelay;  # 请求频率限制

            # 静态资源缓存设置
            expires 1d;                             # 设置缓存过期时间为1天
            add_header Cache-Control "public, immutable";  # 缓存控制头
        }

        # FastAPI 接口代理配置
        location /api/ {
            proxy_pass http://fastapi_backend;       # 代理到 FastAPI 后端服务器组
            
            # 请求头传递配置
            proxy_set_header Host $host;            # 传递原始 Host 头
            proxy_set_header X-Real-IP $remote_addr;  # 传递客户端真实IP
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  # 传递代理链信息
            proxy_set_header X-Forwarded-Proto $scheme;  # 传递协议信息（http/https）
            
            proxy_http_version 1.1;                 # 使用 HTTP/1.1 协议
            proxy_set_header Connection "";         # 清除 Connection 头，启用长连接

            # 缓冲和超时配置
            proxy_request_buffering on;             # 开启请求体缓冲（处理大文件上传）
            proxy_buffering on;                     # 开启响应缓冲
            proxy_buffers 16 512k;                  # 响应缓冲区数量和大小
            proxy_buffer_size 512k;                 # 响应头缓冲区大小
            proxy_busy_buffers_size 1m;             # 繁忙缓冲区大小

            # 超时设置
            proxy_connect_timeout 300;              # 连接后端超时时间（秒）
            proxy_send_timeout 300;                 # 发送请求超时时间（秒）
            proxy_read_timeout 300;                 # 读取响应超时时间（秒）

            # 连接和请求限制
            limit_conn conn_limit_per_ip 4;        # API接口允许更多并发连接
            # limit_req zone=req_limit_per_ip burst=20 nodelay;  # API接口允许更多突发请求

            limit_rate 100m;                          # 限制下载速度为10MB/s
        }

        # 受保护的文件下载路径（内部重定向）
        location /protected/ {
            internal;                               # 仅允许内部重定向访问，外部无法直接访问
            alias /app/fastgo/;                   # 映射到实际的文件存储路径
            
            # 下载优化配置
            sendfile on;                            # 启用高效文件传输
            tcp_nopush on;                          # 优化网络传输
            
            # Per-IP 限速控制
            limit_conn conn_limit_per_ip 4;         # 每个IP最多4个并发下载连接
            limit_req zone=req_limit_per_ip burst=8 nodelay;  # API接口允许更多突发请求

            # 动态限速支持 - FastAPI通过X-Accel-Limit-Rate头控制
            # 注意：nginx的if指令有限制，更简单的方式是在FastAPI中总是设置这个头
            limit_rate 100m;                          # 默认限速50MB/s（如果FastAPI没有设置X-Accel-Limit-Rate）

            # 如果要支持动态限速，需要使用map指令在http块中定义，这里先用固定值
        }

        # 临时文件下载路径（内部重定向）
        location /protected_tmp/ {
            internal;                               # 仅允许内部重定向访问
            alias /tmp/;                            # 映射到临时文件目录
            
            # 下载优化配置
            sendfile on;                            # 启用高效文件传输
            tcp_nopush on;                          # 优化网络传输
            
            # Per-IP 限速控制
            limit_conn conn_limit_per_ip 4;         # 每个IP最多4个并发下载连接
            limit_req zone=req_limit_per_ip burst=8 nodelay;  # API接口允许更多突发请求

            # 动态限速支持 - FastAPI通过X-Accel-Limit-Rate头控制
            # 注意：nginx的if指令有限制，更简单的方式是在FastAPI中总是设置这个头
            limit_rate 100m;                          # 默认限速50MB/s（如果FastAPI没有设置X-Accel-Limit-Rate）
            
            # 如果要支持动态限速，需要使用map指令在http块中定义，这里先用固定值
        }

        # 错误页面配置
        error_page 404 /404.html;                  # 自定义404错误页面
        error_page 500 502 503 504 /50x.html;     # 自定义5xx错误页面
    }
}

# 使用说明：
# 1. 复制配置文件：cp /mnt/usb_main/ailuntz_d_container/8400数据/8409_ail_fastgo/app/nginx.conf /etc/nginx/nginx.conf
# 2. 启动 Nginx：nginx
# 3. 停止 Nginx：nginx -s stop
# 4. 重新加载配置：nginx -s reload
# 5. 测试配置语法：nginx -t